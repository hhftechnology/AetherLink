name: AetherLink CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pylint black isort
        
    - name: Check code formatting
      run: |
        black --check .
        isort --check-only .
        
    - name: Lint with pylint
      run: |
        pylint aetherlink.py
        
    - name: Run tests with coverage
      run: |
        pytest --cov=./ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
    - name: Create Release Package
      run: |
        tar -czf aetherlink-${{ env.VERSION }}.tar.gz \
          aetherlink.py \
          install.sh \
          config/aetherlink_config.json \
          README.md \
          LICENSE
          
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: aetherlink-${{ env.VERSION }}.tar.gz
        draft: false
        prerelease: false